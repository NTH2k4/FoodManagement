@page
@model FoodManagement.Pages.Feedbacks.FeedbackPageModel
@{
    ViewData["Title"] = "Danh sách phản hồi";
    // helper
    int startIndex = 0;
    int endIndex = 0;
    var totalItems = Model.Pagination?.TotalItems ?? 0;
    var current = Model.Pagination?.CurrentPage ?? 1;
    var size = Model.Pagination?.PageSize ?? Model.PageSize;
    if (totalItems == 0)
    {
        startIndex = 0;
        endIndex = 0;
    }
    else
    {
        startIndex = (current - 1) * size + 1;
        endIndex = Math.Min(current * size, totalItems);
    }

    string GetSortOrder(string column)
    {
        if (Model.SortColumn == column)
            return Model.SortOrder == "asc" ? "desc" : "asc";
        return "asc";
    }
    string GetSortIcon(string column)
    {
        if (Model.SortColumn != column) return "";
        return Model.SortOrder == "asc"
            ? "<i class=\"bx bx-up-arrow-alt text-success\"></i>"
            : "<i class=\"bx bx-down-arrow-alt text-danger\"></i>";
    }
    string GetSortClass(string column)
    {
        return Model.SortColumn == column ? "text-primary fw-bold" : "";
    }
}

<link rel="stylesheet" href="/assets/vendor/css/ListPage.css" />

<div class="flex-grow-1 container-p-y page-content-padding">
    <!-- Topbar (sticky in this page only) -->
    <div class="page-topbar">
        <div class="d-flex align-items-center justify-content-between">
            <div class="d-flex align-items-center gap-2">
                <form method="get" class="d-flex align-items-center" style="min-width:300px;">
                    <input type="text"
                           name="SearchTerm"
                           value="@Model.SearchTerm"
                           class="form-control form-control-sm"
                           placeholder="Tìm kiếm theo tên hoặc sđt..." />
                    <input type="hidden" name="pages" value="@Model.Pages" />
                    <input type="hidden" name="PageSize" value="@Model.PageSize" />
                    <input type="hidden" name="SortColumn" value="@Model.SortColumn" />
                    <input type="hidden" name="SortOrder" value="@Model.SortOrder" />
                    <button type="submit" class="btn btn-outline-secondary btn-sm ms-2">Tìm</button>
                </form>

                <button class="btn btn-outline-secondary btn-sm" type="button" title="Settings">
                    <i class="bx bx-cog"></i>
                </button>

                <button class="btn btn-outline-secondary btn-sm" type="button" data-bs-toggle="collapse" data-bs-target="#filterPanel" aria-expanded="false" aria-controls="filterPanel" title="Filter">
                    <i class="bx bx-filter"></i>
                </button>
            </div>
        </div>

        <!-- Filter panel (collapse) -->
        <div class="collapse" id="filterPanel">
            <div class="card card-body">
                <form method="get" class="row g-2">
                    <div class="col-md-4">
                        <input type="text" name="SearchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Tên khách / sđt..." />
                    </div>
                    <div class="col-md-3">
                        <select name="SortColumn" class="form-select">
                            <option value="">Sắp xếp theo</option>
                            <option value="CustomerName" selected="@(Model.SortColumn == "CustomerName" ? "selected" : null)">Tên khách</option>
                            <option value="CreatedDate" selected="@(Model.SortColumn == "CreatedDate" ? "selected" : null)">Ngày gửi</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select name="SortOrder" class="form-select">
                            <option value="asc" selected="@(Model.SortOrder == "asc" ? "selected" : null)">Tăng dần</option>
                            <option value="desc" selected="@(Model.SortOrder == "desc" ? "selected" : null)">Giảm dần</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select name="PageSize" class="form-select">
                            <option value="5" selected="@(Model.PageSize == 5)">5</option>
                            <option value="10" selected="@(Model.PageSize == 10)">10</option>
                            <option value="25" selected="@(Model.PageSize == 25)">25</option>
                            <option value="50" selected="@(Model.PageSize == 50)">50</option>
                        </select>
                    </div>
                    <div class="col-md-1 d-flex">
                        <button type="submit" class="btn btn-primary p-2">Áp dụng</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Card / Table -->
    <div class="card rounded-0">
        <div class="card-body">
            @if (!string.IsNullOrEmpty(Model.Error))
            {
                <div id="alert-error" class="alert alert-danger">@Model.Error</div>
            }
            else if (!string.IsNullOrEmpty(Model.Message))
            {
                <div id="alert-success" class="alert alert-success">@Model.Message</div>
            }

            <div class="table-responsive text-nowrap">
                <table class="table table-bordered align-middle mb-0">
                    <thead>
                        <tr>
                            <th style="width:110px;">Mã</th>
                            <th>
                                <a asp-page="./FeedbackPage"
                                   asp-route-SortColumn="CustomerName"
                                   asp-route-SortOrder="@GetSortOrder("CustomerName")"
                                   asp-route-pages="@Model.Pages"
                                   asp-route-PageSize="@Model.PageSize"
                                   asp-route-SearchTerm="@Model.SearchTerm"
                                   class="@GetSortClass("CustomerName")"
                                   style="text-decoration:none;">
                                    Khách hàng @Html.Raw(GetSortIcon("CustomerName"))
                                </a>
                            </th>
                            <th>SĐT</th>
                            <th>Email</th>
                            <th>Bình luận (tóm tắt)</th>
                            <th class="text-end">
                                <a asp-page="./FeedbackPage"
                                   asp-route-SortColumn="CreatedDate"
                                   asp-route-SortOrder="@GetSortOrder("CreatedDate")"
                                   asp-route-pages="@Model.Pages"
                                   asp-route-PageSize="@Model.PageSize"
                                   asp-route-SearchTerm="@Model.SearchTerm"
                                   class="@GetSortClass("CreatedDate")"
                                   style="text-decoration:none;">
                                    Ngày gửi @Html.Raw(GetSortIcon("CreatedDate"))
                                </a>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Feedbacks != null && Model.Feedbacks.Any())
                        {
                            @foreach (var f in Model.Feedbacks)
                            {
                                <tr style="cursor:pointer;"
                                    data-id="@f.id"
                                    data-accountid="@f.accountId"
                                    data-name="@f.name"
                                    data-phone="@f.phone"
                                    data-email="@f.email"
                                    data-comment="@f.comment"
                                    data-createdtext="@( (DateTimeOffset.FromUnixTimeMilliseconds(f.createdAt).ToLocalTime().ToString("dd/MM/yyyy HH:mm")) )"
                                    onclick="showFeedbackInfo(this)">
                                    <td>@f.id</td>
                                    <td><strong>@f.name</strong></td>
                                    <td>@f.phone</td>
                                    <td>@f.email</td>
                                    <td class="text-truncate" style="max-width:320px;">@f.comment</td>
                                    <td class="text-end">@DateTimeOffset.FromUnixTimeMilliseconds(f.createdAt).ToLocalTime().ToString("dd/MM/yyyy HH:mm")</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-center text-muted">Chưa có phản hồi nào.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- removed inline pagination here (we keep footer fixed pager only) -->
        </div>
    </div>

    <!-- Fixed footer -->
    <div class="fixed-footer" aria-hidden="false">
        <div class="container-xxl">
            <div class="fixed-footer-inner d-flex justify-content-between align-items-center">
                <div>
                    <small class="text-muted">
                        Hiển thị @startIndex đến @endIndex của @totalItems phản hồi
                    </small>
                </div>

                <div class="d-flex align-items-center gap-3">
                    <div class="d-flex align-items-center">
                        <label class="me-2 mb-0">Hiển thị</label>
                        <form method="get" id="pageSizeForm" class="d-flex align-items-center">
                            <input type="hidden" name="pages" value="@Model.Pages" />
                            <input type="hidden" name="SortColumn" value="@Model.SortColumn" />
                            <input type="hidden" name="SortOrder" value="@Model.SortOrder" />
                            <input type="hidden" name="SearchTerm" value="@Model.SearchTerm" />
                            <select name="PageSize" onchange="document.getElementById('pageSizeForm').submit();" class="form-select form-select-sm">
                                <option value="5" selected="@(Model.PageSize == 5)">5</option>
                                <option value="10" selected="@(Model.PageSize == 10)">10</option>
                                <option value="25" selected="@(Model.PageSize == 25)">25</option>
                                <option value="50" selected="@(Model.PageSize == 50)">50</option>
                            </select>
                        </form>
                    </div>

                    <nav aria-label="Pagination bottom">
                        <ul class="pagination mb-0">
                            <li class="page-item @(Model.Pagination.CurrentPage == 1 ? "disabled" : "")">
                                <a class="page-link" asp-page="./FeedbackPage"
                                   asp-route-pages="@(Model.Pagination.CurrentPage - 1)"
                                   asp-route-PageSize="@Model.Pagination.PageSize"
                                   asp-route-SortColumn="@Model.SortColumn"
                                   asp-route-SortOrder="@Model.SortOrder"
                                   asp-route-SearchTerm="@Model.SearchTerm">&laquo;</a>
                            </li>
                            @for (int i = 1; i <= Model.Pagination.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "") d-none d-sm-inline">
                                    <a class="page-link" asp-page="./FeedbackPage"
                                       asp-route-pages="@i"
                                       asp-route-PageSize="@Model.Pagination.PageSize"
                                       asp-route-SortColumn="@Model.SortColumn"
                                       asp-route-SortOrder="@Model.SortOrder"
                                       asp-route-SearchTerm="@Model.SearchTerm">@i</a>
                                </li>
                            }
                            <li class="page-item @(Model.Pagination.HasNext ? "" : "disabled")">
                                <a class="page-link" asp-page="./FeedbackPage"
                                   asp-route-pages="@(Model.Pagination.CurrentPage + 1)"
                                   asp-route-PageSize="@Model.Pagination.PageSize"
                                   asp-route-SortColumn="@Model.SortColumn"
                                   asp-route-SortOrder="@Model.SortOrder"
                                   asp-route-SearchTerm="@Model.SearchTerm">&raquo;</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Chi tiết phản hồi (client-driven) -->
<div class="modal fade" id="feedbackInfoModal" tabindex="-1" aria-labelledby="feedbackInfoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title mb-0 text-white" id="feedbackInfoModalLabel">Chi tiết phản hồi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                <dl class="row mb-2">
                    <dt class="col-sm-4">Mã</dt>
                    <dd id="fi-id" class="col-sm-8"></dd>

                    <dt class="col-sm-4">Tên khách</dt>
                    <dd id="fi-name" class="col-sm-8"></dd>

                    <dt class="col-sm-4">Số điện thoại</dt>
                    <dd id="fi-phone" class="col-sm-8"></dd>

                    <dt class="col-sm-4">Email</dt>
                    <dd id="fi-email" class="col-sm-8"></dd>

                    <dt class="col-sm-4">Bình luận</dt>
                    <dd id="fi-comment" class="col-sm-8"></dd>

                    <dt class="col-sm-4">Ngày gửi</dt>
                    <dd id="fi-created" class="col-sm-8"></dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-hide alerts after 3s
        setTimeout(() => {
            document.querySelectorAll('.alert').forEach(alert => {
                alert.classList.add('fade');
                setTimeout(() => alert.remove(), 500);
            });
        }, 3000);

        // Prevent row click when clicking interactive elements (safety)
        document.querySelectorAll('.dropdown, .dropdown *').forEach(el => {
            el.addEventListener('click', function (e) {
                e.stopPropagation();
            });
        });

        const serverParams = {
            pages: '@(Model.Pagination?.CurrentPage ?? 1)',
            pageSize: '@Model.PageSize',
            sortColumn: '@(Model.SortColumn ?? "")',
            sortOrder: '@(Model.SortOrder ?? "")',
            searchTerm: '@(Model.SearchTerm ?? "")'
        };

        function showFeedbackInfo(el) {
            if (!el) return;
            if (el.closest('.dropdown')) return;

            const ds = el.dataset || {};
            const id = ds.id || '';
            const name = ds.name || '';
            const phone = ds.phone || '';
            const email = ds.email || '';
            const comment = ds.comment || '';
            const created = ds.createdtext || '';

            const fill = (idSel, value) => {
                const node = document.getElementById(idSel);
                if (node) node.textContent = value;
            };

            fill('fi-id', id);
            fill('fi-name', name);
            fill('fi-phone', phone);
            fill('fi-email', email);
            fill('fi-comment', comment);
            fill('fi-created', created);

            const modalEl = document.getElementById('feedbackInfoModal');
            const modal = bootstrap.Modal.getOrCreateInstance(modalEl);
            modal.show();
        }
    </script>
}
