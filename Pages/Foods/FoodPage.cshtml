@page
@model FoodManagement.Pages.Foods.FoodPageModel
@{
    ViewData["Title"] = "Danh sách món ăn";
    // helper
    int startIndex = 0;
    int endIndex = 0;
    var totalItems = Model.Pagination?.TotalItems ?? 0;
    var current = Model.Pagination?.CurrentPage ?? 1;
    var size = Model.Pagination?.PageSize ?? Model.PageSize;
    if (totalItems == 0)
    {
        startIndex = 0;
        endIndex = 0;
    }
    else
    {
        startIndex = (current - 1) * size + 1;
        endIndex = Math.Min(current * size, totalItems);
    }
}

<link rel="stylesheet" href="/assets/vendor/css/ListPage.css" />

<div class="flex-grow-1 container-p-y page-content-padding">
    <!-- Topbar (sticky in this page only) -->
    <div class="page-topbar">
        <div class="d-flex align-items-center justify-content-between">
            <div>
                <a class="btn btn-primary d-inline-flex align-items-center" asp-page="./CreateFood">
                    <i class="bx bx-plus me-1"></i> Thêm món mới
                </a>
            </div>

            <div class="d-flex align-items-center gap-2">
                <form method="get" class="d-flex align-items-center" style="min-width:300px;">
                    <input type="text"
                           name="SearchTerm"
                           value="@Model.SearchTerm"
                           class="form-control form-control-sm"
                           placeholder="Tìm kiếm theo tên..." />
                    <input type="hidden" name="pages" value="@Model.pages" />
                    <input type="hidden" name="PageSize" value="@Model.PageSize" />
                    <input type="hidden" name="SortColumn" value="@Model.SortColumn" />
                    <input type="hidden" name="SortOrder" value="@Model.SortOrder" />
                    <button type="submit" class="btn btn-outline-secondary btn-sm ms-2">Tìm</button>
                </form>

                <button class="btn btn-outline-secondary btn-sm" type="button" title="Settings">
                    <i class="bx bx-cog"></i>
                </button>

                <button class="btn btn-outline-secondary btn-sm" type="button" data-bs-toggle="collapse" data-bs-target="#filterPanel" aria-expanded="false" aria-controls="filterPanel" title="Filter">
                    <i class="bx bx-filter"></i>
                </button>
            </div>
        </div>

        <!-- Filter panel (collapse) -->
        <div class="collapse" id="filterPanel">
            <div class="card card-body">
                <form method="get" class="row g-2">
                    <div class="col-md-4">
                        <input type="text" name="SearchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Tên món..." />
                    </div>
                    <div class="col-md-2">
                        <select name="SortColumn" class="form-select">
                            <option value="">Sắp xếp theo</option>
                            <option value="name" selected="@(Model.SortColumn == "name" ? "selected" : null)">Tên</option>
                            <option value="price" selected="@(Model.SortColumn == "price" ? "selected" : null)">Giá</option>
                            <option value="sale" selected="@(Model.SortColumn == "sale" ? "selected" : null)">Giảm giá</option>
                            <option value="popular" selected="@(Model.SortColumn == "popular" ? "selected" : null)">Phổ biến</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select name="SortOrder" class="form-select">
                            <option value="asc" selected="@(Model.SortOrder == "asc" ? "selected" : null)">Tăng dần</option>
                            <option value="desc" selected="@(Model.SortOrder == "desc" ? "selected" : null)">Giảm dần</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select name="PageSize" class="form-select">
                            <option value="5" selected="@(Model.PageSize == 5)">5</option>
                            <option value="10" selected="@(Model.PageSize == 10)">10</option>
                            <option value="25" selected="@(Model.PageSize == 25)">25</option>
                            <option value="50" selected="@(Model.PageSize == 50)">50</option>
                        </select>
                    </div>
                    <div class="col-md-2 d-flex">
                        <button type="submit" class="btn btn-primary me-2 p-2">Áp dụng</button>
                        <a class="btn btn-outline-secondary p-2" asp-page="./FoodPage">Đặt lại</a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Card / Table -->
    <div class="card rounded-0">
        <div class="card-body">
            @if (!string.IsNullOrEmpty(Model.Error))
            {
                <div id="alert-error" class="alert alert-danger">@Model.Error</div>
            }
            else if (!string.IsNullOrEmpty(Model.Message))
            {
                <div id="alert-success" class="alert alert-success">@Model.Message</div>
            }

            <div class="table-responsive text-nowrap">
                <table class="table table-bordered align-middle mb-0">
                    @{
                        string GetSortOrder(string column)
                        {
                            if (Model.SortColumn == column)
                                return Model.SortOrder == "asc" ? "desc" : "asc";
                            return "asc";
                        }
                        string GetSortIcon(string column)
                        {
                            if (Model.SortColumn != column) return "";
                            return Model.SortOrder == "asc"
                                ? "<i class=\"bx bx-up-arrow-alt text-success\"></i>"
                                : "<i class=\"bx bx-down-arrow-alt text-danger\"></i>";
                        }
                        string GetSortClass(string column)
                        {
                            return Model.SortColumn == column ? "text-primary fw-bold" : "";
                        }
                    }
                    <thead>
                        <tr>
                            <th style="width:0px;">Id</th>
                            <th style="width:100px;">Ảnh</th>
                            <th>
                                <a asp-page="./FoodPage"
                                   asp-route-SortColumn="name"
                                   asp-route-SortOrder="@GetSortOrder("name")"
                                   asp-route-pages="@Model.pages"
                                   asp-route-PageSize="@Model.PageSize"
                                   asp-route-SearchTerm="@Model.SearchTerm"
                                   class="@GetSortClass("name")"
                                   style="text-decoration:none;">
                                    Tên món ăn @Html.Raw(GetSortIcon("name"))
                                </a>
                            </th>
                            <th>
                                <a asp-page="./FoodPage"
                                   asp-route-SortColumn="price"
                                   asp-route-SortOrder="@GetSortOrder("price")"
                                   asp-route-pages="@Model.pages"
                                   asp-route-PageSize="@Model.PageSize"
                                   asp-route-SearchTerm="@Model.SearchTerm"
                                   class="@GetSortClass("price")"
                                   style="text-decoration:none;">
                                    Giá @Html.Raw(GetSortIcon("price"))
                                </a>
                            </th>
                            <th>
                                <a asp-page="./FoodPage"
                                   asp-route-SortColumn="sale"
                                   asp-route-SortOrder="@GetSortOrder("sale")"
                                   asp-route-pages="@Model.pages"
                                   asp-route-PageSize="@Model.PageSize"
                                   asp-route-SearchTerm="@Model.SearchTerm"
                                   class="@GetSortClass("sale")"
                                   style="text-decoration:none;">
                                    Giảm giá (%) @Html.Raw(GetSortIcon("sale"))
                                </a>
                            </th>
                            <th>
                                <a asp-page="./FoodPage"
                                   asp-route-SortColumn="popular"
                                   asp-route-SortOrder="@GetSortOrder("popular")"
                                   asp-route-pages="@Model.pages"
                                   asp-route-PageSize="@Model.PageSize"
                                   asp-route-SearchTerm="@Model.SearchTerm"
                                   class="@GetSortClass("popular")"
                                   style="text-decoration:none;">
                                    Phổ biến @Html.Raw(GetSortIcon("popular"))
                                </a>
                            </th>
                            <th style="width:60px;"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Foods != null && Model.Foods.Any())
                        {
                            @foreach (var food in Model.Foods)
                            {
                                <tr style="cursor:pointer;" onclick="window.location.href='@Url.Page("/Foods/InfoFood", new { id = food.id })'">
                                    <td>@food.id</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(food.image))
                                        {
                                            <img src="@food.image" alt="@food.name Banner" class="img-thumbnail img-banner-fixed" />
                                        }
                                        else
                                        {
                                            <span class="text-muted">No Banner</span>
                                        }
                                    </td>
                                    <td><strong>@food.name</strong></td>
                                    <td>@food.price.ToString("N0") VNĐ</td>
                                    <td>@(food.sale > 0 ? $"{food.sale}%" : "-")</td>
                                    <td>
                                        @if (food.popular)
                                        {
                                            <span class="badge bg-success">Có</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Không</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="dropdown">
                                            <button type="button"
                                                    class="btn p-0 dropdown-toggle hide-arrow"
                                                    data-bs-toggle="dropdown"
                                                    onclick="event.stopPropagation();">
                                                <i class="bx bx-dots-vertical-rounded"></i>
                                            </button>
                                            <div class="dropdown-menu" onclick="event.stopPropagation();">
                                                <a class="dropdown-item"
                                                   href="@Url.Page("./EditFood", new { id = food.id })"
                                                   onclick="event.stopPropagation();">
                                                    <i class="bx bx-edit-alt me-1"></i> Sửa
                                                </a>
                                                <button type="button" class="dropdown-item text-danger"
                                                        data-bs-toggle="modal" data-bs-target="#deleteModal"
                                                        data-id="@food.id" data-name="@food.name"
                                                        onclick="event.stopPropagation();">
                                                    <i class="bx bx-trash me-1"></i> Xóa
                                                </button>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center text-muted">Chưa có món ăn nào</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- removed inline pagination here (we keep footer fixed pager only) -->
        </div>
    </div>
    <!-- Fixed footer (inner content constrained to container-xxl) -->
    <div class="fixed-footer" aria-hidden="false">
        <div class="container-xxl">
            <div class="fixed-footer-inner d-flex justify-content-between align-items-center">
                <div>
                    <small class="text-muted">
                        Hiển thị @startIndex đến @endIndex của @totalItems món
                    </small>
                </div>

                <div class="d-flex align-items-center gap-3">
                    <div class="d-flex align-items-center">
                        <label class="me-2 mb-0">Hiển thị</label>
                        <form method="get" id="pageSizeForm" class="d-flex align-items-center">
                            <input type="hidden" name="pages" value="@Model.pages" />
                            <input type="hidden" name="SortColumn" value="@Model.SortColumn" />
                            <input type="hidden" name="SortOrder" value="@Model.SortOrder" />
                            <input type="hidden" name="SearchTerm" value="@Model.SearchTerm" />
                            <select name="PageSize" onchange="document.getElementById('pageSizeForm').submit();" class="form-select form-select-sm">
                                <option value="5" selected="@(Model.PageSize == 5)">5</option>
                                <option value="10" selected="@(Model.PageSize == 10)">10</option>
                                <option value="25" selected="@(Model.PageSize == 25)">25</option>
                                <option value="50" selected="@(Model.PageSize == 50)">50</option>
                            </select>
                        </form>
                    </div>

                    <nav aria-label="Pagination bottom">
                        <ul class="pagination mb-0">
                            <li class="page-item @(Model.Pagination.HasPrevious ? "" : "disabled")">
                                <a class="page-link" asp-page="./FoodPage"
                                   asp-route-pages="@(Model.Pagination.CurrentPage - 1)"
                                   asp-route-PageSize="@Model.Pagination.PageSize"
                                   asp-route-SortColumn="@Model.SortColumn"
                                   asp-route-SortOrder="@Model.SortOrder"
                                   asp-route-SearchTerm="@Model.SearchTerm">&laquo;</a>
                            </li>
                            @for (int i = 1; i <= Model.Pagination.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "") d-none d-sm-inline">
                                    <a class="page-link" asp-page="./FoodPage"
                                       asp-route-pages="@i"
                                       asp-route-PageSize="@Model.Pagination.PageSize"
                                       asp-route-SortColumn="@Model.SortColumn"
                                       asp-route-SortOrder="@Model.SortOrder"
                                       asp-route-SearchTerm="@Model.SearchTerm">@i</a>
                                </li>
                            }
                            <li class="page-item @(Model.Pagination.HasNext ? "" : "disabled")">
                                <a class="page-link" asp-page="./FoodPage"
                                   asp-route-pages="@(Model.Pagination.CurrentPage + 1)"
                                   asp-route-PageSize="@Model.Pagination.PageSize"
                                   asp-route-SortColumn="@Model.SortColumn"
                                   asp-route-SortOrder="@Model.SortOrder"
                                   asp-route-SearchTerm="@Model.SearchTerm">&raquo;</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Xác nhận xóa -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="Delete" id="deleteForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Xác nhận xóa</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                </div>
                <div class="modal-body">
                    Bạn có chắc chắn muốn xóa món ăn <strong id="deleteFoodName"></strong>?
                    <input type="hidden" name="DeleteId" id="deleteFoodId" value="" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-danger">Xóa</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        // ==============================
        // Helpers
        // ==============================
        function hideAlertsOnce() {
            document.querySelectorAll('.alert').forEach(alert => {
                alert.classList.add('fade');
                setTimeout(() => {
                    if (alert && alert.parentNode) alert.parentNode.removeChild(alert);
                }, 500);
            });
        }
        setTimeout(hideAlertsOnce, 3000);

        function escapeHtml(unsafe) {
            if (!unsafe) return '';
            return unsafe.replace(/[&<"'>]/g, function (m) {
                switch (m) {
                    case '&': return '&amp;';
                    case '<': return '&lt;';
                    case '>': return '&gt;';
                    case '"': return '&quot;';
                    case "'": return '&#039;';
                    default: return m;
                }
            });
        }

        function makeInfoHref(id) {
            return '@Url.Page("/Foods/InfoFood")' + '?id=' + encodeURIComponent(id);
        }

        // ==============================
        // Render table rows
        // ==============================
        function renderFoodRows(items) {
            const tbody = document.querySelector('table tbody');
            if (!tbody) return;
            tbody.innerHTML = '';

            if (!items || items.length === 0) {
                const tr = document.createElement('tr');
                const td = document.createElement('td');
                td.colSpan = 7;
                td.className = 'text-center text-muted';
                td.textContent = 'Chưa có món ăn nào';
                tr.appendChild(td);
                tbody.appendChild(tr);
                return;
            }

            for (const f of items) {
                const tr = document.createElement('tr');
                tr.style.cursor = 'pointer';

                // URL InfoFood
                const infoHref = makeInfoHref(f.id);
                tr.addEventListener('click', function (e) {
                    if (e.target.closest('.dropdown')) return; // bỏ qua click trong dropdown
                    window.location.href = infoHref;
                });

                const displayPrice = (f.price ?? 0).toLocaleString('vi-VN') + ' VNĐ';
                const displaySale = (f.sale > 0) ? f.sale + '%' : '-';
                const popularHtml = f.popular
                    ? '<span class="badge bg-success">Có</span>'
                    : '<span class="badge bg-secondary">Không</span>';
                const imgHtml = f.image
                    ? `<img src="${escapeHtml(f.image)}" alt="${escapeHtml(f.name)} Banner" class="img-thumbnail img-banner-fixed" />`
                    : '<span class="text-muted">No Banner</span>';

                tr.innerHTML = `
                    <td>${escapeHtml(String(f.id ?? ''))}</td>
                    <td>${imgHtml}</td>
                    <td><strong>${escapeHtml(f.name ?? '')}</strong></td>
                    <td>${escapeHtml(displayPrice)}</td>
                    <td>${escapeHtml(displaySale)}</td>
                    <td>${popularHtml}</td>
                    <td>
                        <div class="dropdown">
                            <button type="button"
                                    class="btn p-0 dropdown-toggle hide-arrow"
                                    data-bs-toggle="dropdown"
                                    onclick="event.stopPropagation();">
                                <i class="bx bx-dots-vertical-rounded"></i>
                            </button>
                            <div class="dropdown-menu" onclick="event.stopPropagation();">
                                <a class="dropdown-item"
                                   href="@Url.Page("./EditFood")?id=${encodeURIComponent(String(f.id ?? ''))}"
                                   onclick="event.stopPropagation();">
                                    <i class="bx bx-edit-alt me-1"></i> Sửa
                                </a>
                                <button type="button" class="dropdown-item text-danger"
                                        data-bs-toggle="modal" data-bs-target="#deleteModal"
                                        data-id="${escapeHtml(String(f.id ?? ''))}"
                                        data-name="${escapeHtml(f.name ?? '')}"
                                        onclick="event.stopPropagation();">
                                    <i class="bx bx-trash me-1"></i> Xóa
                                </button>
                            </div>
                        </div>
                    </td>
                `;
                tbody.appendChild(tr);
            }
        }

        // ==============================
        // Modal Delete Binding
        // ==============================
        document.addEventListener('DOMContentLoaded', function () {
            const deleteModal = document.getElementById('deleteModal');
            if (deleteModal) {
                deleteModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    if (!button) return;
                    const id = button.getAttribute('data-id');
                    const name = button.getAttribute('data-name');
                    deleteModal.querySelector('#deleteFoodId').value = id || '';
                    deleteModal.querySelector('#deleteFoodName').textContent = name || '';
                });
            }
        });

        // ==============================
        // SignalR Realtime
        // ==============================
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/foodHub")
            .build();

        connection.on("FoodsUpdated", function (items) {
            renderFoodRows(items);
            // cập nhật pagination text nếu có
            const totalItems = items.length;
            const pageSize = @Model.PageSize;
            const currentPage = @Model.pages;
            const startIndex = (currentPage - 1) * pageSize + 1;
            const endIndex = Math.min(startIndex + pageSize - 1, totalItems);

            const paginationInfo = document.getElementById("pagination-info");
            if (paginationInfo) {
                paginationInfo.textContent = `Hiển thị ${startIndex} đến ${endIndex} của ${totalItems} phản hồi`;
            }
        });

        connection.start().catch(err => console.error(err.toString()));
    </script>
}
