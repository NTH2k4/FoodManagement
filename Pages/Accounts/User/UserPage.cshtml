@page
@model FoodManagement.Pages.Accounts.User.UserPageModel
@{
    ViewData["Title"] = "Quản lý tài khoản người dùng";
    // helper
    int startIndex = 0;
    int endIndex = 0;
    var totalItems = Model.Pagination?.TotalItems ?? 0;
    var current = Model.Pagination?.CurrentPage ?? 1;
    var size = Model.Pagination?.PageSize ?? Model.PageSize;
    if (totalItems == 0)
    {
        startIndex = 0;
        endIndex = 0;
    }
    else
    {
        startIndex = (current - 1) * size + 1;
        endIndex = Math.Min(current * size, totalItems);
    }
    string GetSortOrder(string column)
    {
        if (Model.SortColumn == column)
            return Model.SortOrder == "asc" ? "desc" : "asc";
        return "asc";
    }
    string GetSortIcon(string column)
    {
        if (Model.SortColumn != column) return "";
        return Model.SortOrder == "asc"
            ? "<i class=\"bx bx-up-arrow-alt text-success\"></i>"
            : "<i class=\"bx bx-down-arrow-alt text-danger\"></i>";
    }
    string GetSortClass(string column)
    {
        return Model.SortColumn == column ? "text-primary fw-bold" : "";
    }
}

<link rel="stylesheet" href="/assets/vendor/css/ListPage.css" />

<div class="flex-grow-1 container-p-y page-content-padding">
    <!-- Topbar (sticky in this page only) -->
    <div class="page-topbar">
        <div class="d-flex align-items-center justify-content-between">
            <div>
                <a class="btn btn-primary d-inline-flex align-items-center" asp-page="./CreateUser">
                    <i class="bx bx-plus me-1"></i> Thêm tài khoản
                </a>
            </div>
            <div class="d-flex align-items-center gap-2">
                <form method="get" class="d-flex align-items-center" style="min-width:300px;">
                    <input type="text"
                           name="SearchTerm"
                           value="@Model.SearchTerm"
                           class="form-control form-control-sm"
                           placeholder="Tìm kiếm theo tên..." />
                    <input type="hidden" name="pages" value="@Model.Pagination?.CurrentPage" />
                    <input type="hidden" name="PageSize" value="@Model.PageSize" />
                    <input type="hidden" name="SortColumn" value="@Model.SortColumn" />
                    <input type="hidden" name="SortOrder" value="@Model.SortOrder" />
                    <button type="submit" class="btn btn-outline-secondary btn-sm ms-2">Tìm</button>
                </form>
                <button class="btn btn-outline-secondary btn-sm" type="button" title="Settings">
                    <i class="bx bx-cog"></i>
                </button>
                <button class="btn btn-outline-secondary btn-sm" type="button" data-bs-toggle="collapse" data-bs-target="#filterPanel" aria-expanded="false" aria-controls="filterPanel" title="Filter">
                    <i class="bx bx-filter"></i>
                </button>
            </div>
        </div>
        <!-- Filter panel (collapse) -->
        <div class="collapse" id="filterPanel">
            <div class="card card-body">
                <form method="get" class="row g-2">
                    <div class="col-md-4">
                        <input type="text" name="SearchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Tên người dùng..." />
                    </div>
                    <div class="col-md-2">
                        <select name="SortColumn" class="form-select">
                            <option value="">Sắp xếp theo</option>
                            <option value="fullname" selected="@(Model.SortColumn == "fullname" ? "selected" : null)">Họ tên</option>
                            <option value="email" selected="@(Model.SortColumn == "email" ? "selected" : null)">Email</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select name="SortOrder" class="form-select">
                            <option value="asc" selected="@(Model.SortOrder == "asc" ? "selected" : null)">Tăng dần</option>
                            <option value="desc" selected="@(Model.SortOrder == "desc" ? "selected" : null)">Giảm dần</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select name="PageSize" class="form-select">
                            <option value="5" selected="@(Model.PageSize == 5)">5</option>
                            <option value="10" selected="@(Model.PageSize == 10)">10</option>
                            <option value="25" selected="@(Model.PageSize == 25)">25</option>
                            <option value="50" selected="@(Model.PageSize == 50)">50</option>
                        </select>
                    </div>
                    <div class="col-md-2 d-flex">
                        <button type="submit" class="btn btn-primary me-2 p-2">Áp dụng</button>
                        <a class="btn btn-outline-secondary p-2" asp-page="./UserPage">Đặt lại</a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Card / Table -->
    <div class="card rounded-0">
        <div class="card-body">
            @if (!string.IsNullOrEmpty(Model.Error))
            {
                <div id="alert-error" class="alert alert-danger">@Model.Error</div>
            }
            else if (!string.IsNullOrEmpty(Model.Message))
            {
                <div id="alert-success" class="alert alert-success">@Model.Message</div>
            }
            <div class="table-responsive text-nowrap">
                <table class="table table-bordered align-middle mb-0">
                    <thead>
                        <tr>
                            <th>
                                <a asp-page="./UserPage"
                                   asp-route-SortColumn="fullname"
                                   asp-route-SortOrder="@GetSortOrder("fullname")"
                                   asp-route-pages="@Model.Pagination?.CurrentPage"
                                   asp-route-PageSize="@Model.PageSize"
                                   asp-route-SearchTerm="@Model.SearchTerm"
                                   class="@GetSortClass("fullname")"
                                   style="text-decoration:none;">
                                    Họ tên @Html.Raw(GetSortIcon("fullname"))
                                </a>
                            </th>
                            <th>Số điện thoại</th>
                            <th>
                                <a asp-page="./UserPage"
                                   asp-route-SortColumn="email"
                                   asp-route-SortOrder="@GetSortOrder("email")"
                                   asp-route-pages="@Model.Pagination?.CurrentPage"
                                   asp-route-PageSize="@Model.PageSize"
                                   asp-route-SearchTerm="@Model.SearchTerm"
                                   class="@GetSortClass("email")"
                                   style="text-decoration:none;">
                                    Email @Html.Raw(GetSortIcon("email"))
                                </a>
                            </th>
                            <th>Địa chỉ</th>
                            <th>Ngày tạo</th>
                            <th style="width:60px;"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Users.Any())
                        {
                            @foreach (var user in Model.Users)
                            {
                                <tr style="cursor:pointer;"
                                    data-id="@user.id"
                                    data-fullname="@user.fullName"
                                    data-phone="@user.phone"
                                    data-email="@user.email"
                                    data-address="@user.address"
                                    data-password="@user.password"
                                    data-createdtext="@( (DateTimeOffset.FromUnixTimeMilliseconds(user.createdAt).ToLocalTime().ToString("dd/MM/yyyy HH:mm")) )"
                                    onclick="showUserInfo(this)">
                                    <td><strong>@user.fullName</strong></td>
                                    <td>@user.phone</td>
                                    <td>@user.email</td>
                                    <td>@user.address</td>
                                    <td>@(DateTimeOffset.FromUnixTimeMilliseconds(user.createdAt).ToLocalTime().ToString("dd/MM/yyyy HH:mm"))</td>
                                    <td>
                                        <div class="dropdown">
                                            <button type="button"
                                                    class="btn p-0 dropdown-toggle hide-arrow"
                                                    data-bs-toggle="dropdown"
                                                    data-bs-boundary="viewport"
                                                    onclick="event.stopPropagation();">
                                                <i class="bx bx-dots-vertical-rounded"></i>
                                            </button>
                                            <div class="dropdown-menu" onclick="event.stopPropagation();">
                                                <a class="dropdown-item"
                                                   href="@Url.Page("./EditUser", new { id = user.id })"
                                                   onclick="event.stopPropagation();">
                                                    <i class="bx bx-edit-alt me-1"></i> Sửa
                                                </a>
                                                <button type="button" class="dropdown-item text-danger"
                                                        data-bs-toggle="modal" data-bs-target="#deleteModal"
                                                        data-id="@user.id" data-name="@user.fullName"
                                                        onclick="event.stopPropagation();">
                                                    <i class="bx bx-trash me-1"></i> Xóa
                                                </button>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-center text-muted">Không có tài khoản nào.</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <!-- Fixed footer (inner content constrained to container-xxl) -->
    <div class="fixed-footer" aria-hidden="false">
        <div class="container-xxl">
            <div class="fixed-footer-inner d-flex justify-content-between align-items-center">
                <div>
                    <small class="text-muted">
                        Hiển thị @startIndex đến @endIndex của @totalItems tài khoản
                    </small>
                </div>
                <div class="d-flex align-items-center gap-3">
                    <div class="d-flex align-items-center">
                        <label class="me-2 mb-0">Hiển thị</label>
                        <form method="get" id="pageSizeForm" class="d-flex align-items-center">
                            <input type="hidden" name="pages" value="@Model.Pagination?.CurrentPage" />
                            <input type="hidden" name="SortColumn" value="@Model.SortColumn" />
                            <input type="hidden" name="SortOrder" value="@Model.SortOrder" />
                            <input type="hidden" name="SearchTerm" value="@Model.SearchTerm" />
                            <select name="PageSize" onchange="document.getElementById('pageSizeForm').submit();" class="form-select form-select-sm">
                                <option value="5" selected="@(Model.PageSize == 5)">5</option>
                                <option value="10" selected="@(Model.PageSize == 10)">10</option>
                                <option value="25" selected="@(Model.PageSize == 25)">25</option>
                                <option value="50" selected="@(Model.PageSize == 50)">50</option>
                            </select>
                        </form>
                    </div>
                    <nav aria-label="Pagination bottom">
                        <ul class="pagination mb-0">
                            <li class="page-item @(Model.Pagination.CurrentPage == 1 ? "disabled" : "")">
                                <a class="page-link" asp-page="./UserPage"
                                   asp-route-pages="@(Model.Pagination.CurrentPage - 1)"
                                   asp-route-PageSize="@Model.PageSize"
                                   asp-route-SortColumn="@Model.SortColumn"
                                   asp-route-SortOrder="@Model.SortOrder"
                                   asp-route-SearchTerm="@Model.SearchTerm">&laquo;</a>
                            </li>
                            @for (int i = 1; i <= Math.Ceiling((double)Model.Pagination.TotalItems / Model.Pagination.PageSize); i++)
                            {
                                <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "") d-none d-sm-inline">
                                    <a class="page-link" asp-page="./UserPage"
                                       asp-route-pages="@i"
                                       asp-route-PageSize="@Model.PageSize"
                                       asp-route-SortColumn="@Model.SortColumn"
                                       asp-route-SortOrder="@Model.SortOrder"
                                       asp-route-SearchTerm="@Model.SearchTerm">@i</a>
                                </li>
                            }
                            <li class="page-item @(Model.Pagination.CurrentPage == Math.Ceiling((double)Model.Pagination.TotalItems / Model.Pagination.PageSize) ? "disabled" : "")">
                                <a class="page-link" asp-page="./UserPage"
                                   asp-route-pages="@(Model.Pagination.CurrentPage + 1)"
                                   asp-route-PageSize="@Model.PageSize"
                                   asp-route-SortColumn="@Model.SortColumn"
                                   asp-route-SortOrder="@Model.SortOrder"
                                   asp-route-SearchTerm="@Model.SearchTerm">&raquo;</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Xác nhận xóa -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="Delete" id="deleteForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Xác nhận xóa</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                </div>
                <div class="modal-body">
                    Bạn có chắc chắn muốn xóa người dùng <strong id="deleteUserName"></strong>?
                    <input type="hidden" name="DeleteId" id="deleteUserId" value="" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-danger">Xóa</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Hiển thị thông tin user (client-driven) -->
<div class="modal fade" id="userInfoModal" tabindex="-1" aria-labelledby="userInfoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title mb-0 text-white" id="userInfoModalLabel">Thông tin tài khoản</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                <dl class="row mb-0">
                    <dt class="col-sm-4">Họ tên</dt>
                    <dd id="ui-fullname" class="col-sm-8"></dd>
                    <dt class="col-sm-4">Số điện thoại</dt>
                    <dd id="ui-phone" class="col-sm-8"></dd>
                    <dt class="col-sm-4">Email</dt>
                    <dd id="ui-email" class="col-sm-8"></dd>
                    <dt class="col-sm-4">Địa chỉ</dt>
                    <dd id="ui-address" class="col-sm-8"></dd>
                    <dt class="col-sm-4">Mật khẩu</dt>
                    <dd id="ui-password" class="col-sm-8"></dd>
                    <dt class="col-sm-4">Ngày tạo</dt>
                    <dd id="ui-created" class="col-sm-8"></dd>
                </dl>
            </div>
            <div class="modal-footer">
                <a id="userInfoEditBtn" class="btn btn-warning" href="#">Sửa</a>

                <button id="userInfoDeleteBtn" type="button" class="btn btn-danger">Xóa</button>

                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        setTimeout(() => {
            document.querySelectorAll('.alert').forEach(alert => {
                alert.classList.add('fade');
                setTimeout(() => alert.remove(), 500);
            });
        }, 3000);

        var deleteModalEl = document.getElementById('deleteModal');
        if (deleteModalEl) {
            deleteModalEl.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                if (!button) return;
                var userId = button.getAttribute('data-id') ?? '';
                var userName = button.getAttribute('data-name') ?? '';
                var modalUserName = deleteModalEl.querySelector('#deleteUserName');
                var modalUserId = deleteModalEl.querySelector('#deleteUserId');
                if (modalUserName) modalUserName.textContent = userName;
                if (modalUserId) modalUserId.value = userId;
            });

            var deleteForm = document.getElementById('deleteForm');
            if (deleteForm) {
                deleteForm.addEventListener('submit', function (e) {
                    var modalUserId = document.getElementById('deleteUserId');
                    var val = modalUserId ? modalUserId.value : '';
                    if (!val || val.trim() === '') {
                        e.preventDefault();
                        alert('Không tìm thấy id để xóa. Vui lòng thử lại.');
                    }
                });
            }
        }

        document.querySelectorAll('.dropdown, .dropdown *').forEach(el => {
            el.addEventListener('click', function (e) {
                e.stopPropagation();
            });
        });

        const serverParams = {
            pages: '@(Model.Pagination?.CurrentPage ?? 1)',
            pageSize: '@Model.PageSize',
            sortColumn: '@(Model.SortColumn ?? "")',
            sortOrder: '@(Model.SortOrder ?? "")',
            searchTerm: '@(Model.SearchTerm ?? "")'
        };

        function showUserInfo(el) {
            if (!el) return;
            if (el.closest('.dropdown')) return;

            const ds = el.dataset || {};
            const id = ds.id || '';
            const name = ds.fullname || '';
            const phone = ds.phone || '';
            const email = ds.email || '';
            const address = ds.address || '';
            const password = ds.password || '';
            const created = ds.createdtext || '';

            const fill = (idSel, value) => {
                const node = document.getElementById(idSel);
                if (node) node.textContent = value;
            };
            fill('ui-fullname', name);
            fill('ui-phone', phone);
            fill('ui-email', email);
            fill('ui-address', address);
            fill('ui-password', password);
            fill('ui-created', created);

            const editBtn = document.getElementById('userInfoEditBtn');
            if (editBtn) {
                const editBase = '@Url.Page("./EditUser")';
                const params = new URLSearchParams();
                if (id) params.set('id', id);
                if (serverParams.pages) params.set('pages', serverParams.pages);
                if (serverParams.pageSize) params.set('PageSize', serverParams.pageSize);
                if (serverParams.sortColumn) params.set('SortColumn', serverParams.sortColumn);
                if (serverParams.sortOrder) params.set('SortOrder', serverParams.sortOrder);
                if (serverParams.searchTerm) params.set('SearchTerm', serverParams.searchTerm);
                editBtn.href = editBase + (params.toString() ? ('?' + params.toString()) : '');
                editBtn.onclick = function (ev) { ev.stopPropagation(); };
            }

            const infoDel = document.getElementById('userInfoDeleteBtn');
            if (infoDel) {
                const newDel = infoDel.cloneNode(true);
                infoDel.parentNode.replaceChild(newDel, infoDel);

                newDel.addEventListener('click', function (ev) {
                    ev.stopPropagation();
                    const userModalEl = document.getElementById('userInfoModal');
                    const userModal = bootstrap.Modal.getInstance(userModalEl);
                    if (userModal) userModal.hide();
                    const delNameEl = document.getElementById('deleteUserName');
                    const delIdEl = document.getElementById('deleteUserId');
                    if (delNameEl) delNameEl.textContent = name;
                    if (delIdEl) delIdEl.value = id;
                    const dEl = document.getElementById('deleteModal');
                    const dModal = bootstrap.Modal.getOrCreateInstance(dEl);
                    dModal.show();
                });
            }

            const modalEl = document.getElementById('userInfoModal');
            const modal = bootstrap.Modal.getOrCreateInstance(modalEl);
            modal.show();
        }
    </script>
}
